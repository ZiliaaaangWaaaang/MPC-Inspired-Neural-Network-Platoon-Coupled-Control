%% 数据预处理（第一步）
% clear;
% load('data\platoon\nndata.mat')
row_X=size(X,1);

a=50; %要分割成多少个矩阵
c=494; % 每个矩阵有494行
k=1;
 
%% 循环生成小矩阵
for i =1:a
    x=X(k:k+c-1,:);u=U(k:k+c-1,:); % 提取
    e_x=['x',num2str(i)]; % 准备给每个矩阵命名
    e_u=['u',num2str(i)];
    eval([e_x,'=x']); % 将每个名字赋值给各个矩阵
    eval([e_u,'=u']);
    k=c*i+1; % 继续循环
end

%% 手动进行数据修正
X=[x3;x6;x9;
    x12;x15;x17;x19;x20;
    x21;x22;x24;x25;x26;x27;x29;x30;
    x32;x33;x34;x35;x36;x37;x38;x39;x40;
    x41;x42;x43;x44;x45;x46;x48;x49;x50];
U=[u3;u6;u9;
    u12;u15;u17;u19;u20;
    u21;u22;u24;u25;u26;u27;u29;u30;
    u32;u33;u34;u35;u36;u37;u38;u39;u40;
    u41;u42;u43;u44;u45;u46;u48;u49;u50];

% %% 删除缺失数据（手动删除）
% U = U(all(~isnan(X),2),:);
% X = X(all(~isnan(X),2),:); %删除含有NAN的行
% 
% %% 剔除异常点
% id1=find(X(:,1)<-8 | X(:,1)>8); X(id1,:)=[];U(id1,:)=[];
% id3=find(X(:,3)<-0.7 | X(:,3)>0.7); X(id3,:)=[];U(id3,:)=[];
% id4=find(X(:,4)<-0.07 | X(:,4)>0.07); X(id4,:)=[];U(id4,:)=[];
% id6=find(X(:,6)<12 | X(:,6)>30); X(id6,:)=[];U(id6,:)=[];
% id7=find(X(:,7)<-0.7 | X(:,7)>0.7); X(id7,:)=[];U(id7,:)=[];
% id8=find(X(:,8)<-0.7 | X(:,8)>0.7); X(id8,:)=[];U(id8,:)=[];
% 
% %% 减小数据震荡
% ID1=find(X(:,1)>-0.02 & X(:,1)<0.02); U(ID1,1)=0;
% 
save('nndata.mat', 'X', 'U');